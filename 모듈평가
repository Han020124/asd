
응집도: 각 클래스는 하나의 역할만 담당하고 있습니다
DeliveryApp 클래스는 주문과 리뷰사이를 이어주는 역할에 집중되어있으며 사용자 요청의 흐름을 처리합니다
Restaurant 클래스는 음식 준비와 리뷰 수신이라는 음식점 관련 기능에 집중되어있습니다
Delivery Rider 클래스는 배달 업무만 수행합니다
역할별 책임이 잘 분리되어 있으며 응집도가 매우 높은편에 속합니다

결합도: 클래스들 간 의존성은 있지만 각 객체가 명확한 인터페이스를 통해서만 상호작용을 합니다
예를 들자면 DeliveryApp은 Restaurant와 DeliveryRider 객체를 직접 생성하여 이용하지만 내부를 구현하는 세부사항에는 의존하지 않습니다
각각의 클래스는 자신의 내부 상태 또는 메서드에 대해 외부가 직접 접근하지 않고 메서드 호출을 통해서만 상호작용합니다
따라서 변경점이 있을 경우 한 클래스 변경이 다른 클래스에 미치는 영향이 적어 결합도가 낮은 편입니다
